from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, \
    ReplyKeyboardRemove, WebAppInfo  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä
from urllib import parse  # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å URL


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ (–≤—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –≤—ã–≤–æ–¥–∞)
withdraw_ref_menu = InlineKeyboardMarkup(row_width=2).add(
    InlineKeyboardButton("–ù–∞ –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É", callback_data='withdraw_ref:bank_card')).add(
    InlineKeyboardButton("QIWI", callback_data="withdraw_ref:qiwi"),
    InlineKeyboardButton("–ù–∞ –±–∞–ª–∞–Ω—Å", callback_data="withdraw_ref:balance")
)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Å—Å—ã–ª–∫–∞–º–∏ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–µ
about = InlineKeyboardMarkup(row_width=2).add(InlineKeyboardButton("üì¢–ö–∞–Ω–∞–ª –ø—Ä–æ–µ–∫—Ç–∞", url="https://t.me/NeuronAgent"),
                                              InlineKeyboardButton("üÜò–ü–æ–º–æ—â—å", url="https://t.me/NeuronSupportBot"),
                                              InlineKeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Midjourney", url="https://telegra.ph/Kak-polzovatsya-MidJourney-podrobnaya-instrukciya-10-16"))


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö)
cancel = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1).add(KeyboardButton("–û—Ç–º–µ–Ω–∞"))


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ (–ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ)
top_up_balance = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("üí∞–í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ", callback_data="buy_sub"))


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
partner = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("‚ÜóÔ∏è–ü–µ—Ä–µ–π—Ç–∏ –∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url="https://t.me/NeuronAgent"),
    InlineKeyboardButton("‚úÖ–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="check_sub"))


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
back_to_choose = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data="back_to_choose_balance"))


# –Ø–∑—ã–∫–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä
lang_text = {"en": "ENG", "ru": "RUS"}


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –¥–∏–∞–ª–æ–≥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å ChatGPT) –∏ –ø–µ—Ä–µ–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –∞—É–¥–∏–æ
def get_clear_or_audio():    
    
    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ChatGPT", callback_data="settings"),
        InlineKeyboardButton("üó£–û–∑–≤—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç", callback_data="text_to_audio"),
        InlineKeyboardButton("üóÇ–ú–æ–∏ —á–∞—Ç—ã", callback_data="my_chats"),
        InlineKeyboardButton("üóë–£–¥–∞–ª–∏—Ç—å —á–∞—Ç", callback_data="delete_chat")
        )


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞, —Å–º–µ–Ω–∞ —è–∑—ã–∫–∞, —Å–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫)
def get_account(lang, from_msg):

    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("üí∞–í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ", callback_data="buy_sub"),
        InlineKeyboardButton("‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ChatGPT", callback_data="settings")
    )

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ChatGPT
def settings(lang, from_msg):
    flag = 'üá∑üá∫' if lang == 'ru' else 'üá¨üáß'

    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("ü§ñ–í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å ChatGPT", callback_data="model_menu"),
        InlineKeyboardButton(f"–û—Ç–≤–µ—Ç—ã ChatGPT: {flag}", callback_data=f"change_lang:{lang}:{from_msg}"),
        InlineKeyboardButton("‚úçüèª–†–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ", callback_data="chatgpt_about_me"),
        InlineKeyboardButton("üé≠–•–∞—Ä–∞–∫—Ç–µ—Ä ChatGPT", callback_data="character_menu"),
        InlineKeyboardButton("üó£–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ–ª–æ—Å ChatGPT", callback_data="voice_menu"),
        InlineKeyboardButton("üóÇ–ú–æ–∏ —á–∞—Ç—ã", callback_data="my_chats"),
        InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data="back_to_profile:acc")
    )

# –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ GPT –¥–ª—è –¥–∏–∞–ª–æ–≥–æ–≤
def model_keyboard(selected_model: str):
    models = {"4o": "GPT-4o",
              "o4-mini": "GPT-o4-mini",
              "4_1": "GPT-4.1",
              "o1": "GPT-o1"}
    buttons = [
        InlineKeyboardButton(
            f"{value}‚úÖ" if key == selected_model else value,
            callback_data=f"select_model:{key}"
        )
        for key, value in models.items()
    ]
    return InlineKeyboardMarkup(row_width=1).add(*buttons).add(
        InlineKeyboardButton("üìã–û—Ç–ª–∏—á–∏—è –º–æ–¥–µ–ª–µ–π GPT", url="https://telegra.ph/Otlichiya-modelej-GPT-12-24"),
        InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data="back_to_profile:acc")
    )

# –í—ã–±–æ—Ä –≥–æ–ª–æ—Å–∞ –¥–ª—è ChatGPT
def voice_keyboard(selected_voice: str):
    voices = {"alloy": "–î–∞–Ω–∏—ç–ª—å(Alloy)",
              "echo": "–ê–Ω—Ç–æ–Ω–∏–π(Echo)",
              "fable": "–ß–∞—Ä–ª–∏(Fable)",
              "onyx": "–ú–∏—Ö–∞–∏–ª(Onyx)", 
              "nova": "–≠–º–∏–ª–∏—è(Nova)", 
              "shimmer": "–°–∏–¥–Ω–∏(Shimmer)"}
    buttons = [
        InlineKeyboardButton(
            f"{value}‚úÖ" if key == selected_voice else value, 
            callback_data=f"select_voice:{key}"
        )
        for key, value in voices.items()
    ]
    return InlineKeyboardMarkup(row_width=2).add(*buttons).add(
        InlineKeyboardButton("üîâ–ü—Ä–æ—Å–ª—É—à–∞—Ç—å –≥–æ–ª–æ—Å–∞", callback_data="check_voice"),
        InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data="back_to_profile:acc")
    )


# –£–¥–∞–ª–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥
def clear_description():

    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("‚úñÔ∏è–£–¥–∞–ª–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data="reset_chatgpt_settings"),
        InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data="back_to_profile:acc")
    )


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∞—Ä–∏–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ MidJourney)
def get_try_prompt(ai_type):

    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("üîÑ –î—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç", callback_data=f"try_prompt:{ai_type}"))


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç, —Å –∫–∞–∫–∏–º AI –æ–Ω —Ö–æ—á–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å (ChatGPT –∏–ª–∏ MidJourney)
def get_menu(default_ai):

    return ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(KeyboardButton(f"{'üé®Midjourney‚úÖ' if default_ai == 'image' else 'üé®Midjourney'}"),
                                                                      KeyboardButton(f"{'üé®Image OpenAI‚úÖ' if default_ai == 'image_openai' else 'üé®Image OpenAI'}"),
                                                                      KeyboardButton(f"{'üí¨ChatGPT‚úÖ' if default_ai == 'chatgpt' else 'üí¨ChatGPT'}"),
                                                                      KeyboardButton("‚öô–ê–∫–∫–∞—É–Ω—Ç"),
                                                                      KeyboardButton("üë®üèª‚Äçüíª–ü–æ–¥–¥–µ—Ä–∂–∫–∞"),
                                                                      KeyboardButton("ü§ù–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞"))


# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã (Tinkoff, –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ –∏ —Ç.–¥.)
def get_pay_urls(urls, order_id, model, src='acc'):

    back = f"buy_chatgpt_tokens:{model}:normal" if model != 'midjourney' else 'buy_midjourney_requests'

    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞", url=urls["tinkoff"]),
        # InlineKeyboardButton("–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞", web_app=WebAppInfo(url=urls["freekassa"])),
        InlineKeyboardButton("Telegram Stars", callback_data=f"tg_stars:{order_id}"),
        InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data=back))


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ Telegram Stars
def get_tg_stars_pay():

    kb = InlineKeyboardMarkup(row_width=1)
    kb.add(InlineKeyboardButton("Telegram Stars", pay=True))  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ Telegram
    kb.add(InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data=f"delete_msg"))  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
    return kb


# –ö–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏ (–ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π, –≤—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞)
def get_ref_menu(url):

    text_url = parse.quote(url)  # –ö–æ–¥–∏—Ä—É–µ–º URL
    url = f'https://t.me/share/url?url={text_url}'  # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è
    return InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton('üì©–ü–æ–¥–µ–ª–∏—Ç—Å—è —Å—Å—ã–ª–∫–æ–π', url=url),
                                                 InlineKeyboardButton('üí≥–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤',
                                                                      callback_data='withdraw_ref_menu'),
                                                 InlineKeyboardButton('üîô–ù–∞–∑–∞–¥', callback_data='check_sub'))


# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–≤–∞—Ä–∏–∞—Ü–∏–∏, –∑—É–º –∏ —Ç.–¥.)
def get_try_prompt_or_choose(task_id, include_try=False):

    kb = InlineKeyboardMarkup(row_width=2).add(
        InlineKeyboardButton("u1", callback_data=f"choose_image:{task_id}:1"),
        InlineKeyboardButton("u2", callback_data=f"choose_image:{task_id}:2"),
        InlineKeyboardButton("u3", callback_data=f"choose_image:{task_id}:3"),
        InlineKeyboardButton("u4", callback_data=f"choose_image:{task_id}:4"))
    if include_try:
        kb.add(InlineKeyboardButton("üîÑ –ï—â—ë –≤–∞—Ä–∏–∞–Ω—Ç—ã", callback_data=f"try_prompt:image"))  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∞—Ä–∏–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
    return kb


# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–≤–∞—Ä–∏–∞—Ü–∏—è, –∑—É–º –∏ —Ç.–¥.)
def get_choose(task_id):

    return InlineKeyboardMarkup(row_width=2).add(
        InlineKeyboardButton("ü™Ñ Vary (Subtle)", callback_data=f"change_image:vary:low:{task_id}"),
        InlineKeyboardButton("ü™Ñ Vary (Strong)", callback_data=f"change_image:vary:high:{task_id}"),
        InlineKeyboardButton("üîç Zoom Out 2x", callback_data=f"change_image:zoom:2:{task_id}"),
        InlineKeyboardButton("üîç Zoom Out 1.5x", callback_data=f"change_image:zoom:1.5:{task_id}"))


''' –ù–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–∫—É–ø–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è GPT –∏–ª–∏ MJ '''

# –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Ç–æ–∫–µ–Ω–æ–≤
def get_neural_network_menu():

    return InlineKeyboardMarkup(row_width=2).add(
        InlineKeyboardButton("üí¨ChatGPT", callback_data="select_gpt_tokens"),
        InlineKeyboardButton("üé®Midjourney", callback_data="buy_midjourney_requests")
    )

def get_chatgpt_models():

    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("GPT-4.1", callback_data="buy_chatgpt_tokens:4.1:normal"),
        InlineKeyboardButton("GPT-o1", callback_data="buy_chatgpt_tokens:o1:normal"),
        InlineKeyboardButton("üìã–û—Ç–ª–∏—á–∏—è –º–æ–¥–µ–ª–µ–π GPT", url="https://telegra.ph/Otlichiya-modelej-GPT-12-24"),
        InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data="buy_sub")
    )

def get_chatgpt_models_noback(discount=None):

    target = 'discount' if discount else 'normal'
    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("GPT-4.1", callback_data=f"buy_chatgpt_tokens:4.1:{target}"),
        InlineKeyboardButton("GPT-o1", callback_data=f"buy_chatgpt_tokens:o1:{target}"),
        InlineKeyboardButton("üìã–û—Ç–ª–∏—á–∏—è –º–æ–¥–µ–ª–µ–π GPT", url="https://telegra.ph/Otlichiya-modelej-GPT-12-24"),
    )


# –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è ChatGPT
# Mode - Normal - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ—à–∏–ª –∫—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã, Discount - —É –Ω–µ–≥–æ –¥–µ–π—Å—Ç–≤—É–µ—Ç —Å–∫–∏–¥–∫–∞, Notification - –ø–µ—Ä–µ—à–µ–ª –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–∫–∏–¥–∫–µ
# Model - 4.1, o1
def get_chatgpt_tokens_menu(mode, model):

    source = 'acc' if mode == 'normal' else 'not_gpt'
    back = "buy_sub" if mode == 'normal' else 'back_to_discount' 

    prices = {'4.1': {'normal': {'price': [199, 349, 469, 739, 10],
                                'percent': [0, 12, 21, 25, 0]},
                     'discount': {'price': ['199 > 189', '349 > 315', '469 > 412', '739 > 628', '10 > 5'],
                                  'price_data' : [189, 315, 412, 628, 5],
                                  'percent': [5, 10, 12, 15, 0]}},


              'o1': {'normal': {'price': [199, 349, 469, 739, 10],
                                'percent': [0, 12, 21, 25, 0]},
                     'discount': {'price': ['199 > 189', '349 > 315', '469 > 412', '739 > 628', '10 > 5'],
                                  'price_data' : [189, 315, 412, 628, 5],
                                  'percent': [5, 10, 12, 15, 0]}}}

    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton(
            f"20 —Ç—ã—Å —Ç–æ–∫–µ–Ω–æ–≤, {prices[model][mode]['price'][0]}‚ÇΩ" + ('' if mode == 'normal' else f' (-{prices[model][mode]["percent"][0]}%)'), 
            callback_data=f"tokens:20000:{model}:{prices[model][mode]['price'][0] if mode == 'normal' else prices[model][mode]['price_data'][0]}:{source}"),
        InlineKeyboardButton(
            f"40 —Ç—ã—Å —Ç–æ–∫–µ–Ω–æ–≤, {prices[model][mode]['price'][1]}‚ÇΩ (-{prices[model][mode]['percent'][1]}%)", 
            callback_data=f"tokens:40000:{model}:{prices[model][mode]['price'][1] if mode == 'normal' else prices[model][mode]['price_data'][1]}:{source}"),
        InlineKeyboardButton(
            f"60 —Ç—ã—Å —Ç–æ–∫–µ–Ω–æ–≤, {prices[model][mode]['price'][2]}‚ÇΩ (-{prices[model][mode]['percent'][2]}%)",
            callback_data=f"tokens:60000:{model}:{prices[model][mode]['price'][2] if mode == 'normal' else prices[model][mode]['price_data'][2]}:{source}"),
        InlineKeyboardButton(
            f"100 —Ç—ã—Å —Ç–æ–∫–µ–Ω–æ–≤, {prices[model][mode]['price'][3]}‚ÇΩ (-{prices[model][mode]['percent'][3]}%)",
            callback_data=f"tokens:100000:{model}:{prices[model][mode]['price'][3] if mode == 'normal' else prices[model][mode]['price_data'][3]}:{source}"),
        # InlineKeyboardButton(
        #     f"1 —Ç—ã—Å —Ç–æ–∫–µ–Ω–æ–≤, {prices[model][mode]['price'][4]}‚ÇΩ (-{prices[model][mode]['percent'][4]}%)", 
        #     callback_data=f"tokens:1000:{model}:{prices[model][mode]['price'][4] if mode == 'normal' else prices[model][mode]['price_data'][4]}:{source}"),  
        InlineKeyboardButton("üìã–ß—Ç–æ —Ç–∞–∫–æ–µ —Ç–æ–∫–µ–Ω—ã", url="https://telegra.ph/CHto-takoe-tokeny-12-23-3"),          
        InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data=back)
    )


# –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è Midjourney
def get_midjourney_requests_menu():

    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("10 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π, 149‚ÇΩ", callback_data="select_midjourney_requests:10:149:acc"),
        InlineKeyboardButton("20 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π, 259‚ÇΩ (-13%)", callback_data="select_midjourney_requests:20:259:acc"),
        InlineKeyboardButton("50 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π, 599‚ÇΩ (-19%)", callback_data="select_midjourney_requests:50:599:acc"),
        InlineKeyboardButton("100 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π, 1099‚ÇΩ (-26%)", callback_data="select_midjourney_requests:100:1099:acc"),
        InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data="buy_sub")
    )

'''
# –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è ChatGPT –°–û –°–ö–ò–î–ö–û–ô
def get_chatgpt_discount_tokens_menu():

    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("100 —Ç—ã—Å —Ç–æ–∫–µ–Ω–æ–≤, 149‚ÇΩ > 139‚ÇΩ (-5%)", callback_data="select_chatgpt_tokens:100000:139:acc"),
        InlineKeyboardButton("200 —Ç—ã—Å —Ç–æ–∫–µ–Ω–æ–≤, 249‚ÇΩ > 224‚ÇΩ (-10%)", callback_data="select_chatgpt_tokens:200000:224:acc"),
        InlineKeyboardButton("500 —Ç—ã—Å —Ç–æ–∫–µ–Ω–æ–≤, 449‚ÇΩ > 381‚ÇΩ (-15%)", callback_data="select_chatgpt_tokens:500000:381:acc"),
        InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data="buy_sub")
    )
'''

# –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è Midjourney –°–û –°–ö–ò–î–ö–û–ô
def get_midjourney_discount_requests_menu():

    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("10 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π, 149‚ÇΩ", callback_data="select_midjourney_requests:10:149:acc"),
        InlineKeyboardButton("20 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π, 259‚ÇΩ > 246‚ÇΩ (-5%)", callback_data="select_midjourney_requests:20:246:acc"),
        InlineKeyboardButton("50 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π, 599‚ÇΩ > 550‚ÇΩ (-8%)", callback_data="select_midjourney_requests:50:550:acc"),
        InlineKeyboardButton("100 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π, 1099‚ÇΩ > 989‚ÇΩ (-10%)", callback_data="select_midjourney_requests:100:989:acc"),
        InlineKeyboardButton("üîô–ù–∞–∑–∞–¥", callback_data="buy_sub")
    )

'''    
# –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è ChatGPT –°–û –°–ö–ò–î–ö–û–ô –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏
def get_chatgpt_discount_nofication():

    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("100 —Ç—ã—Å —Ç–æ–∫–µ–Ω–æ–≤, 149‚ÇΩ > 139‚ÇΩ (-5%)", callback_data="select_chatgpt_tokens:100000:139:not_gpt"),
        InlineKeyboardButton("200 —Ç—ã—Å —Ç–æ–∫–µ–Ω–æ–≤, 249‚ÇΩ > 224‚ÇΩ (-10%)", callback_data="select_chatgpt_tokens:200000:224:not_gpt"),
        InlineKeyboardButton("500 —Ç—ã—Å —Ç–æ–∫–µ–Ω–æ–≤, 449‚ÇΩ > 381‚ÇΩ (-15%)", callback_data="select_chatgpt_tokens:500000:381:not_gpt")
    )
'''

# –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è Midjourney –°–û –°–ö–ò–î–ö–û–ô –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏
def get_midjourney_discount_notification():

    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("20 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π, 259‚ÇΩ > 246‚ÇΩ (-5%)", callback_data="select_midjourney_requests:20:246:not_mj"),
        InlineKeyboardButton("50 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π, 599‚ÇΩ > 550‚ÇΩ (-8%)", callback_data="select_midjourney_requests:50:550:not_mj"),
        InlineKeyboardButton("100 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π, 1099‚ÇΩ > 989‚ÇΩ (-10%)", callback_data="select_midjourney_requests:100:989:not_mj")
    )

# Inline-–º–µ–Ω—é –¥–ª—è "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç OpenAI"
image_openai_menu = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="–ì–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", callback_data="generate_image_prompt"),
            InlineKeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", callback_data="edit_image"),
        ],
        [
            InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="image_settings"),
        ],
    ]
)

# Inline-–º–µ–Ω—é –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
settings_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="/size ‚Äî –í—ã–±—Ä–∞—Ç—å —Ä–∞–∑–º–µ—Ä", callback_data="set_size"),
            InlineKeyboardButton(text="/quality ‚Äî –í—ã–±—Ä–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ", callback_data="set_quality"),
        ],
        [
            InlineKeyboardButton(text="/background ‚Äî –í—ã–±—Ä–∞—Ç—å —Ñ–æ–Ω", callback_data="set_background"),
        ],
        [
            InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_main_menu"),
        ],
    ]
)

# Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞
size_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="1024x1024", callback_data="size_1024x1024"),
            InlineKeyboardButton(text="1536x1024", callback_data="size_1536x1024"),
            InlineKeyboardButton(text="1024x1536", callback_data="size_1024x1536"),
        ],
        [
            InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_settings"),
        ]
    ]
)